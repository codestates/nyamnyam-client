{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/limwondong/codestates/nyamnyam/nyamnyam-client/src/index.js\";\n\nimport React from 'react';\nimport { registerRootComponent } from 'expo';\nimport App from \"./App\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from \"./modules\";\nimport { name as appName } from \"../app.json\";\nvar sagaMiddleware = createSagaMiddleware();\nvar store = createStore(rootReducer, applyMiddleware(sagaMiddleware, logger));\nsagaMiddleware.run(rootSaga);\n\nvar RNRedux = function RNRedux() {\n  return React.createElement(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(App, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n};\n\nregisterRootComponent(RNRedux);","map":{"version":3,"sources":["/home/limwondong/codestates/nyamnyam/nyamnyam-client/src/index.js"],"names":["React","registerRootComponent","App","Provider","createStore","applyMiddleware","logger","createSagaMiddleware","rootReducer","rootSaga","name","appName","sagaMiddleware","store","run","RNRedux"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,MAAtC;AACA,OAAOC,GAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,IAAsBC,QAAtB;AACA,SAASC,IAAI,IAAIC,OAAjB;AAEA,IAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AACA,IAAMM,KAAK,GAAGT,WAAW,CAACI,WAAD,EAAcH,eAAe,CAACO,cAAD,EAAiBN,MAAjB,CAA7B,CAAzB;AAEAM,cAAc,CAACE,GAAf,CAAmBL,QAAnB;;AAEA,IAAMM,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQAZ,qBAAqB,CAACc,OAAD,CAArB","sourcesContent":["import React from 'react';\nimport { registerRootComponent } from 'expo';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer, { rootSaga } from './modules';\nimport { name as appName } from '../app.json';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware, logger));\n\nsagaMiddleware.run(rootSaga);\n\nconst RNRedux = () => {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n};\n\nregisterRootComponent(RNRedux);\n"]},"metadata":{},"sourceType":"module"}