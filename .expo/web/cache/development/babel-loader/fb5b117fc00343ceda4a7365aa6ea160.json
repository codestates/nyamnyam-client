{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { signinSuccess } from \"./fakeData\";\nexport var signin = function signin(signinInfo) {\n  return _regeneratorRuntime.async(function signin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('signin:', signinInfo);\n          return _context.abrupt(\"return\", signinSuccess);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/home/limwondong/codestates/nyamnyam/nyamnyam-client/src/api/auth.ts"],"names":["signinSuccess","signin","signinInfo","console","log"],"mappings":";AAAA,SAASA,aAAT;AAGA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAElBC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,UAAvB;AAFkB,2CAGXF,aAHW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import { signinSuccess } from './fakeData';\nimport { signinInfoType } from '@base/types/auth';\n\nexport const signin = async (signinInfo: signinInfoType) => {\n    //axios로 로그인 api 요청\n    console.log('signin:', signinInfo);\n    return signinSuccess;\n}"]},"metadata":{},"sourceType":"module"}