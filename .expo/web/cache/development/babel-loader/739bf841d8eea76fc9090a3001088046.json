{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nexport var getStoreByKeyword = function getStoreByKeyword(_ref) {\n  var keyword, coords, cafeResults;\n  return _regeneratorRuntime.async(function getStoreByKeyword$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          keyword = _ref.keyword, coords = _ref.coords;\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(\"https://dapi.kakao.com/v2/local/search/keyword.json?query=\" + encodeURIComponent(keyword) + \"&x=\" + coords.x + \"&y=\" + coords.y, {\n            headers: {\n              Authorization: 'KakaoAK 00bb9e39dfdc4d620c37f49660ac625a'\n            }\n          }));\n\n        case 4:\n          cafeResults = _context.sent;\n          return _context.abrupt(\"return\", cafeResults.data.documents);\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          throw new Error(_context.t0);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 8]], Promise);\n};","map":{"version":3,"sources":["/home/limwondong/codestates/nyamnyam/nyamnyam-client/src/api.ts"],"names":["axios","getStoreByKeyword","keyword","coords","get","encodeURIComponent","x","y","headers","Authorization","cafeResults","data","documents","Error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AASA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BC,UAAAA,OAD+B,QAC/BA,OAD+B,EAE/BC,MAF+B,QAE/BA,MAF+B;AAAA;AAAA;AAAA,2CAKHH,KAAK,CAACI,GAAN,gEACqCC,kBAAkB,CAC7EH,OAD6E,CADvD,WAGjBC,MAAM,CAACG,CAHU,WAGHH,MAAM,CAACI,CAHJ,EAIxB;AACEC,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAE;AADR;AADX,WAJwB,CALG;;AAAA;AAKvBC,UAAAA,WALuB;AAAA,2CAgBtBA,WAAW,CAACC,IAAZ,CAAiBC,SAhBK;;AAAA;AAAA;AAAA;AAAA,gBAkBvB,IAAIC,KAAJ,aAlBuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import axios from 'axios';\nimport { AddressAPIResult } from '@base/types/api';\nimport { Coords } from '@base/types/SignUpAddress';\n\ntype getStoreByKeywordProps = {\n  keyword: string;\n  coords: Coords;\n};\n\nexport const getStoreByKeyword = async ({\n  keyword,\n  coords,\n}: getStoreByKeywordProps): Promise<AddressAPIResult> => {\n  try {\n    const cafeResults = await axios.get(\n      `https://dapi.kakao.com/v2/local/search/keyword.json?query=${encodeURIComponent(\n        keyword\n      )}&x=${coords.x}&y=${coords.y}`,\n      {\n        headers: {\n          Authorization: 'KakaoAK 00bb9e39dfdc4d620c37f49660ac625a',\n        },\n      }\n    );\n\n    return cafeResults.data.documents;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}