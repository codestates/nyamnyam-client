{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/limwondong/codestates/nyamnyam/nyamnyam-client/src/screens/Signin/containers/Signin.tsx\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components/native';\nimport SigninScreen from \"../components/SigninScreen\";\nimport { requestSignin } from \"../../../modules/signin\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport default function Signin(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _route$params = route.params,\n      title = _route$params.title,\n      signinType = _route$params.signinType;\n\n  var _useSelector = useSelector(function (state) {\n    return state.signin;\n  }),\n      isSignin = _useSelector.isSignin,\n      user = _useSelector.user,\n      error = _useSelector.error;\n\n  var dispatch = useDispatch();\n\n  var handleEmailChange = function handleEmailChange(text) {\n    setEmail(text);\n  };\n\n  var handlePasswordChange = function handlePasswordChange(text) {\n    setPassword(text);\n  };\n\n  var handleSigninPress = function handleSigninPress() {\n    if (email.length === 0 || password.length === 0) {\n      Alert.alert('이메일 또는 패스워드를 입력하세요.');\n      return;\n    }\n\n    var signinInfo = {\n      email: email,\n      password: password\n    };\n    dispatch(requestSignin(signinInfo));\n  };\n\n  var handleSignupPress = function handleSignupPress() {\n    navigation.navigate('Signup');\n  };\n\n  return React.createElement(React.Fragment, null, !isSignin && error && React.createElement(ErrorMsg, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(ErrorText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, error)), React.createElement(SigninScreen, {\n    title: title,\n    email: email,\n    password: password,\n    handleEmailChange: handleEmailChange,\n    handlePasswordChange: handlePasswordChange,\n    handleSignupPress: handleSignupPress,\n    handleSigninPress: handleSigninPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\nvar ErrorMsg = styled.View.withConfig({\n  displayName: \"Signin__ErrorMsg\",\n  componentId: \"bgqef4-0\"\n})([\"\"]);\nvar ErrorText = styled.Text.withConfig({\n  displayName: \"Signin__ErrorText\",\n  componentId: \"bgqef4-1\"\n})([\"color:red;\"]);","map":{"version":3,"sources":["/home/limwondong/codestates/nyamnyam/nyamnyam-client/src/screens/Signin/containers/Signin.tsx"],"names":["React","useState","useDispatch","useSelector","styled","SigninScreen","requestSignin","Signin","route","navigation","email","setEmail","password","setPassword","params","title","signinType","state","signin","isSignin","user","error","dispatch","handleEmailChange","text","handlePasswordChange","handleSigninPress","length","Alert","alert","signinInfo","handleSignupPress","navigate","ErrorMsg","View","ErrorText","Text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,YAAP;AACA,SAAwBC,aAAxB;;AAIA,eAAe,SAASC,MAAT,OAAoD;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;AAAA,MAA3BC,UAA2B,QAA3BA,UAA2B;;AAAA,kBACvCR,QAAQ,CAAC,EAAD,CAD+B;AAAA;AAAA,MAC1DS,KAD0D;AAAA,MACnDC,QADmD;;AAAA,mBAEjCV,QAAQ,CAAC,EAAD,CAFyB;AAAA;AAAA,MAE1DW,QAF0D;AAAA,MAEhDC,WAFgD;;AAAA,sBAGnCL,KAAK,CAACM,MAH6B;AAAA,MAGzDC,KAHyD,iBAGzDA,KAHyD;AAAA,MAGlDC,UAHkD,iBAGlDA,UAHkD;;AAAA,qBAI/Bb,WAAW,CAAC,UAACc,KAAD;AAAA,WAAsBA,KAAK,CAACC,MAA5B;AAAA,GAAD,CAJoB;AAAA,MAIzDC,QAJyD,gBAIzDA,QAJyD;AAAA,MAI/CC,IAJ+C,gBAI/CA,IAJ+C;AAAA,MAIzCC,KAJyC,gBAIzCA,KAJyC;;AAKjE,MAAMC,QAAQ,GAAGpB,WAAW,EAA5B;;AAEA,MAAMqB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD,EAAkB;AAC1Cb,IAAAA,QAAQ,CAACa,IAAD,CAAR;AACD,GAFD;;AAGA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACD,IAAD,EAAkB;AAC7CX,IAAAA,WAAW,CAACW,IAAD,CAAX;AACD,GAFD;;AAGA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,QAAGhB,KAAK,CAACiB,MAAN,KAAiB,CAAjB,IAAsBf,QAAQ,CAACe,MAAT,KAAoB,CAA7C,EAA+C;AAC7CC,MAAAA,KAAK,CAACC,KAAN,CAAY,qBAAZ;AACA;AACD;;AAED,QAAMC,UAAU,GAAG;AACjBpB,MAAAA,KAAK,EAALA,KADiB;AAEjBE,MAAAA,QAAQ,EAARA;AAFiB,KAAnB;AAKAU,IAAAA,QAAQ,CAAChB,aAAa,CAACwB,UAAD,CAAd,CAAR;AAED,GAbD;;AAcA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BtB,IAAAA,UAAU,CAACuB,QAAX,CAAoB,QAApB;AACD,GAFD;;AAMA,SACE,0CACG,CAACb,QAAD,IAAaE,KAAb,IACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,KAAZ,CADF,CAFJ,EAOE,oBAAC,YAAD;AACE,IAAA,KAAK,EAAEN,KADT;AAEE,IAAA,KAAK,EAAEL,KAFT;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,iBAAiB,EAAEW,iBAJrB;AAKE,IAAA,oBAAoB,EAAEE,oBALxB;AAME,IAAA,iBAAiB,EAAEM,iBANrB;AAOE,IAAA,iBAAiB,EAAEL,iBAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAmBD;AAED,IAAMO,QAAQ,GAAG7B,MAAM,CAAC8B,IAAV;AAAA;AAAA;AAAA,QAAd;AAGA,IAAMC,SAAS,GAAG/B,MAAM,CAACgC,IAAV;AAAA;AAAA;AAAA,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components/native';\nimport { SigninProps } from '@base/types';\nimport SigninScreen from '../components/SigninScreen';\nimport { setSigninType, requestSignin } from '@base/modules/signin';\nimport { RootState } from '@base/modules';\nimport { Alert } from 'react-native';\n\nexport default function Signin({ route, navigation }: SigninProps) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { title, signinType } = route.params;\n  const { isSignin, user, error } = useSelector((state: RootState) => state.signin);\n  const dispatch = useDispatch();\n\n  const handleEmailChange = (text: string) => {\n    setEmail(text);\n  };\n  const handlePasswordChange = (text: string) => {\n    setPassword(text);\n  };\n  const handleSigninPress = () => {\n    if(email.length === 0 || password.length === 0){\n      Alert.alert('이메일 또는 패스워드를 입력하세요.')\n      return;\n    }    \n\n    const signinInfo = {\n      email,\n      password\n    };\n    \n    dispatch(requestSignin(signinInfo));\n\n  };\n  const handleSignupPress = () => {\n    navigation.navigate('Signup');\n  };\n\n  //if(isSignin) navigation.navigate('Main');\n\n  return (\n    <>\n      {!isSignin && error &&\n        <ErrorMsg>\n          <ErrorText>{error}</ErrorText>  \n        </ErrorMsg>\n      }\n\n      <SigninScreen\n        title={title}\n        email={email}\n        password={password}\n        handleEmailChange={handleEmailChange}\n        handlePasswordChange={handlePasswordChange}\n        handleSignupPress={handleSignupPress}\n        handleSigninPress={handleSigninPress}\n      />\n    </>\n  );\n}\n\nconst ErrorMsg = styled.View`\n`;\n\nconst ErrorText = styled.Text`\n  color: red;\n`;"]},"metadata":{},"sourceType":"module"}